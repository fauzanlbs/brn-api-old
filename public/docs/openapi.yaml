openapi: 3.0.3
info:
    title: 'Buser Rent Car Nasional'
    description: ''
    version: 1.0.0
servers:
    -
        url: 'http://api.brn.com'
paths:
    /api/articles:
        get:
            summary: 'Mendapatkan list data artikel.'
            description: 'Dibagian ini Anda bisa mendapatkan list data artikel. note: <i>content</i> dilimit 100 karekter, Anda bisa melihat semua di detail artikel'
            parameters:
                -
                    in: query
                    name: search
                    description: 'Mencari data artikel.'
                    example: 'Berita hari ini'
                    required: false
                    schema:
                        type: string
                        description: 'Mencari data artikel.'
                        example: 'Berita hari ini'
                -
                    in: query
                    name: 'page[number]'
                    description: 'Menyesuaikan URI paginator.'
                    example: '1'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan URI paginator.'
                        example: '1'
                -
                    in: query
                    name: 'page[size]'
                    description: 'Menyesuaikan jumlah data yang ditampilkan.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan jumlah data yang ditampilkan.'
                        example: '2'
                -
                    in: query
                    name: sort
                    description: 'Menyortir data ( key_name / -key_name ), default -created_at.'
                    example: created_at
                    required: false
                    schema:
                        type: string
                        description: 'Menyortir data ( key_name / -key_name ), default -created_at.'
                        example: created_at
                -
                    in: query
                    name: 'filter[title]'
                    description: 'Penyortiran berdasarkan judul.'
                    example: 'Berita hari ini'
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan judul.'
                        example: 'Berita hari ini'
                -
                    in: query
                    name: 'filter[slug]'
                    description: 'Penyortiran berdasarkan slug.'
                    example: berita-hari-ini
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan slug.'
                        example: berita-hari-ini
                -
                    in: query
                    name: 'filter[created_at]'
                    description: 'Penyortiran berdasarkan tanggal dibuat.'
                    example: '2020-12-24'
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan tanggal dibuat.'
                        example: '2020-12-24'
                -
                    in: query
                    name: 'filter[featured]'
                    description: 'Penyortiran berdasarkan diunggulakan, harus berupa angka 0 atau 1.'
                    example: 1
                    required: false
                    schema:
                        type: integer
                        description: 'Penyortiran berdasarkan diunggulakan, harus berupa angka 0 atau 1.'
                        example: 1
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 16, slug: performance-checklist, image: articles/1.jpeg, image_url: 'http://api.brn.com/storage/articles/1.jpeg', title: 'The Ultimate Performance Checklist For Laravel Apps', content: 'We can all agree that we prefer an app that loads faster to one that''s slow...', status: PUBLISHED, date: '2021-04-29T17:00:00.000000Z', featured: false, created_at: '2021-04-30T13:45:33.000000Z', updated_at: '2021-04-30T13:45:33.000000Z', likes_count: 5, views_count: 631, comments_count: 5, categories: [{ id: 9, slug: performance, name: performance, description: 'tips for yout aplication' }], author: { roles: [{ name: admin }], name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }]
                                    links: { first: 'http://api.brn.com/api/articles?page%5Bnumber%5D=1', last: null, prev: null, next: 'http://api.brn.com/api/articles?page%5Bnumber%5D=2' }
                                    meta: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles', per_page: 15, to: 15 }
                                properties:
                                    data: { type: array, example: [{ id: 16, slug: performance-checklist, image: articles/1.jpeg, image_url: 'http://api.brn.com/storage/articles/1.jpeg', title: 'The Ultimate Performance Checklist For Laravel Apps', content: 'We can all agree that we prefer an app that loads faster to one that''s slow...', status: PUBLISHED, date: '2021-04-29T17:00:00.000000Z', featured: false, created_at: '2021-04-30T13:45:33.000000Z', updated_at: '2021-04-30T13:45:33.000000Z', likes_count: 5, views_count: 631, comments_count: 5, categories: [{ id: 9, slug: performance, name: performance, description: 'tips for yout aplication' }], author: { roles: [{ name: admin }], name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://api.brn.com/api/articles?page%5Bnumber%5D=1', last: null, prev: null, next: 'http://api.brn.com/api/articles?page%5Bnumber%5D=2' } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles', per_page: 15, to: 15 } }
            tags:
                - Artikel
            security: []
    '/api/articles/{article}':
        get:
            summary: 'Mendapatkan detailt data artikel.'
            description: ''
            parameters:
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: 1, slug: performance-checklist, image: articles/1.jpeg, image_url: 'http://api.brn.com/storage/articles/1.jpeg', title: 'The Ultimate Performance Checklist For Laravel Apps', content: 'We can all agree that we prefer an app that loads faster to one that''s slow...', status: PUBLISHED, date: '2021-04-29T17:00:00.000000Z', featured: false, created_at: '2021-04-30T13:45:33.000000Z', updated_at: '2021-04-30T13:45:33.000000Z', likes_count: 5, views_count: 631, comments_count: 5, categories: [{ id: 9, slug: performance, name: performance, description: 'tips for yout aplication' }], author: { roles: [{ name: admin }], name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }
                                properties:
                                    data: { type: object, example: { id: 1, slug: performance-checklist, image: articles/1.jpeg, image_url: 'http://api.brn.com/storage/articles/1.jpeg', title: 'The Ultimate Performance Checklist For Laravel Apps', content: 'We can all agree that we prefer an app that loads faster to one that''s slow...', status: PUBLISHED, date: '2021-04-29T17:00:00.000000Z', featured: false, created_at: '2021-04-30T13:45:33.000000Z', updated_at: '2021-04-30T13:45:33.000000Z', likes_count: 5, views_count: 631, comments_count: 5, categories: [{ id: 9, slug: performance, name: performance, description: 'tips for yout aplication' }], author: { roles: [{ name: admin }], name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } } }
            tags:
                - Artikel
            security: []
        parameters:
            -
                in: path
                name: article
                description: 'valid id article.'
                example: 1
                required: true
                schema:
                    type: integer
    '/api/articles/categories/{slug}':
        get:
            summary: 'Mendapatkan list data artikel bedasarkan kategori.'
            description: 'Dibagian ini Anda bisa mendapatkan list data artikel. note: <i>content</i> dilimit 100 karekter, Anda bisa melihat semua di detail artikel'
            parameters:
                -
                    in: query
                    name: search
                    description: 'Mencari data artikel.'
                    example: 'Berita hari ini'
                    required: false
                    schema:
                        type: string
                        description: 'Mencari data artikel.'
                        example: 'Berita hari ini'
                -
                    in: query
                    name: 'page[number]'
                    description: 'Menyesuaikan URI paginator.'
                    example: '1'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan URI paginator.'
                        example: '1'
                -
                    in: query
                    name: 'page[size]'
                    description: 'Menyesuaikan jumlah data yang ditampilkan.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan jumlah data yang ditampilkan.'
                        example: '2'
                -
                    in: query
                    name: sort
                    description: 'Menyortir data ( key_name / -key_name ), default -created_at.'
                    example: created_at
                    required: false
                    schema:
                        type: string
                        description: 'Menyortir data ( key_name / -key_name ), default -created_at.'
                        example: created_at
                -
                    in: query
                    name: 'filter[title]'
                    description: 'Penyortiran berdasarkan judul.'
                    example: 'Berita hari ini'
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan judul.'
                        example: 'Berita hari ini'
                -
                    in: query
                    name: 'filter[slug]'
                    description: 'Penyortiran berdasarkan slug.'
                    example: berita-hari-ini
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan slug.'
                        example: berita-hari-ini
                -
                    in: query
                    name: 'filter[created_at]'
                    description: 'Penyortiran berdasarkan tanggal dibuat.'
                    example: '2020-12-24'
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan tanggal dibuat.'
                        example: '2020-12-24'
                -
                    in: query
                    name: 'filter[featured]'
                    description: 'Penyortiran berdasarkan diunggulakan, harus berupa angka 0 atau 1.'
                    example: 1
                    required: false
                    schema:
                        type: integer
                        description: 'Penyortiran berdasarkan diunggulakan, harus berupa angka 0 atau 1.'
                        example: 1
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 16, slug: performance-checklist, image: articles/1.jpeg, image_url: 'http://api.brn.com/storage/articles/1.jpeg', title: 'The Ultimate Performance Checklist For Laravel Apps', content: 'We can all agree that we prefer an app that loads faster to one that''s slow...', status: PUBLISHED, date: '2021-04-29T17:00:00.000000Z', featured: false, created_at: '2021-04-30T13:45:33.000000Z', updated_at: '2021-04-30T13:45:33.000000Z', likes_count: 5, views_count: 631, comments_count: 5, categories: [{ id: 9, slug: performance, name: performance, description: 'tips for yout aplication' }], author: { roles: [{ name: admin }], name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }]
                                    links: { first: 'http://api.brn.com/api/articles?page%5Bnumber%5D=1', last: null, prev: null, next: 'http://api.brn.com/api/articles?page%5Bnumber%5D=2' }
                                    meta: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles', per_page: 15, to: 15 }
                                properties:
                                    data: { type: array, example: [{ id: 16, slug: performance-checklist, image: articles/1.jpeg, image_url: 'http://api.brn.com/storage/articles/1.jpeg', title: 'The Ultimate Performance Checklist For Laravel Apps', content: 'We can all agree that we prefer an app that loads faster to one that''s slow...', status: PUBLISHED, date: '2021-04-29T17:00:00.000000Z', featured: false, created_at: '2021-04-30T13:45:33.000000Z', updated_at: '2021-04-30T13:45:33.000000Z', likes_count: 5, views_count: 631, comments_count: 5, categories: [{ id: 9, slug: performance, name: performance, description: 'tips for yout aplication' }], author: { roles: [{ name: admin }], name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://api.brn.com/api/articles?page%5Bnumber%5D=1', last: null, prev: null, next: 'http://api.brn.com/api/articles?page%5Bnumber%5D=2' } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles', per_page: 15, to: 15 } }
            tags:
                - Artikel
            security: []
        parameters:
            -
                in: path
                name: slug
                description: ''
                example: nihil
                required: true
                schema:
                    type: string
    '/api/articles/{article}/comments':
        get:
            summary: 'Mendapatkan list data komentar artikel.'
            description: ''
            parameters:
                -
                    in: query
                    name: 'page[number]'
                    description: 'Menyesuaikan URI paginator.'
                    example: '1'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan URI paginator.'
                        example: '1'
                -
                    in: query
                    name: 'page[size]'
                    description: 'Menyesuaikan jumlah data yang ditampilkan.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan jumlah data yang ditampilkan.'
                        example: '2'
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 4, comment: 'Semangat Terus !!!', likes_count: 1, created_at: '2021-04-30T18:14:44.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }]
                                    links: { first: 'http://api.brn.com/api/articles/2/comments?page%5Bnumber%5D=1', last: null, prev: null, next: null }
                                    meta: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/2/comments', per_page: 15, to: 2 }
                                properties:
                                    data: { type: array, example: [{ id: 4, comment: 'Semangat Terus !!!', likes_count: 1, created_at: '2021-04-30T18:14:44.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://api.brn.com/api/articles/2/comments?page%5Bnumber%5D=1', last: null, prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/2/comments', per_page: 15, to: 2 } }
            tags:
                - Artikel
            security: []
        post:
            summary: 'Menambahan komentar artikel.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n \"message\": \"Berhasil menambahkan komentar.\",\n}"
            tags:
                - Artikel
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                comment:
                                    type: string
                                    description: 'isi komentar.'
                                    example: 'Semangat terus :)'
                            required:
                                - comment
        parameters:
            -
                in: path
                name: article
                description: 'valid id article.'
                example: 1
                required: true
                schema:
                    type: integer
    '/api/articles/{article}/likes':
        get:
            summary: 'Mendapatkan list data user yang menyukai artikel.'
            description: ''
            parameters:
                -
                    in: query
                    name: 'page[number]'
                    description: 'Menyesuaikan URI paginator.'
                    example: '1'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan URI paginator.'
                        example: '1'
                -
                    in: query
                    name: 'page[size]'
                    description: 'Menyesuaikan jumlah data yang ditampilkan.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan jumlah data yang ditampilkan.'
                        example: '2'
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ created_at: '2021-04-30T17:54:45.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }]
                                    links: { first: 'http://api.brn.com/api/articles/3/liked?page%5Bnumber%5D=1', last: null, prev: null, next: null }
                                    meta: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/3/liked', per_page: 15, to: 1 }
                                properties:
                                    data: { type: array, example: [{ created_at: '2021-04-30T17:54:45.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://api.brn.com/api/articles/3/liked?page%5Bnumber%5D=1', last: null, prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/3/liked', per_page: 15, to: 1 } }
            tags:
                - Artikel
            security: []
        parameters:
            -
                in: path
                name: article
                description: 'valid id article.'
                example: 1
                required: true
                schema:
                    type: integer
    '/api/articles/{article}/liked':
        post:
            summary: 'Menyukai artikel.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n \"message\": \"Berhasil menyukai artikel\",\n}"
            tags:
                - Artikel
        delete:
            summary: 'Batalkan menyukai artikel.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n \"message\": \"Berhasil membatalkan menyukai artikel\",\n}"
            tags:
                - Artikel
        parameters:
            -
                in: path
                name: article
                description: 'valid id article.'
                example: 1
                required: true
                schema:
                    type: integer
    /api/categories:
        get:
            summary: 'Mendapatkan list kategori.'
            description: 'Dibagian ini Anda bisa mendapatkan list data kategori.'
            parameters:
                -
                    in: query
                    name: search
                    description: 'Mencari data kategori.'
                    example: motivasi
                    required: false
                    schema:
                        type: string
                        description: 'Mencari data kategori.'
                        example: motivasi
                -
                    in: query
                    name: 'page[number]'
                    description: 'Menyesuaikan URI paginator.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan URI paginator.'
                        example: '2'
                -
                    in: query
                    name: 'page[size]'
                    description: 'Menyesuaikan jumlah data yang ditampilkan.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan jumlah data yang ditampilkan.'
                        example: '2'
                -
                    in: query
                    name: sort
                    description: 'Menyortir data ( key_name / -key_name ), default -name.'
                    example: name
                    required: false
                    schema:
                        type: string
                        description: 'Menyortir data ( key_name / -key_name ), default -name.'
                        example: name
                -
                    in: query
                    name: 'filter[name]'
                    description: 'Penyortiran berdasarkan nama.'
                    example: motivasi
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan nama.'
                        example: motivasi
                -
                    in: query
                    name: 'filter[slug]'
                    description: 'Penyortiran berdasarkan slug.'
                    example: motivasi
                    required: false
                    schema:
                        type: string
                        description: 'Penyortiran berdasarkan slug.'
                        example: motivasi
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 2, slug: Motivasi, name: 'Motivasi untuk pantang menyerah', description: null }, { id: 1, slug: Berita, name: 'Bertia terbaru', description: null }]
                                    links: { first: 'http://api.brn.com/api/categories?page=1', last: null, prev: null, next: null }
                                    meta: { current_page: 1, from: 1, path: 'http://api.brn.com/api/categories', per_page: 15, to: 9 }
                                properties:
                                    data: { type: array, example: [{ id: 2, slug: Motivasi, name: 'Motivasi untuk pantang menyerah', description: null }, { id: 1, slug: Berita, name: 'Bertia terbaru', description: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://api.brn.com/api/categories?page=1', last: null, prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'http://api.brn.com/api/categories', per_page: 15, to: 9 } }
            tags:
                - Kategori
            security: []
    '/api/comments/{comment}/likes':
        get:
            summary: 'Mendapatkan list data user yang menyukai komentar.'
            description: ''
            parameters:
                -
                    in: query
                    name: 'page[number]'
                    description: 'Menyesuaikan URI paginator.'
                    example: '1'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan URI paginator.'
                        example: '1'
                -
                    in: query
                    name: 'page[size]'
                    description: 'Menyesuaikan jumlah data yang ditampilkan.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan jumlah data yang ditampilkan.'
                        example: '2'
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ created_at: '2021-04-30T17:54:45.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }]
                                    links: { first: 'http://api.brn.com/api/articles/3/liked?page%5Bnumber%5D=1', last: null, prev: null, next: null }
                                    meta: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/3/liked', per_page: 15, to: 1 }
                                properties:
                                    data: { type: array, example: [{ created_at: '2021-04-30T17:54:45.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://api.brn.com/api/articles/3/liked?page%5Bnumber%5D=1', last: null, prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/3/liked', per_page: 15, to: 1 } }
            tags:
                - Komentar
            security: []
        parameters:
            -
                in: path
                name: comment
                description: 'valid id comment.'
                example: 1
                required: true
                schema:
                    type: integer
    '/api/comments/{comment}/replies':
        get:
            summary: 'Mendapatkan list data balasan komentar.'
            description: ''
            parameters:
                -
                    in: query
                    name: 'page[number]'
                    description: 'Menyesuaikan URI paginator.'
                    example: '1'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan URI paginator.'
                        example: '1'
                -
                    in: query
                    name: 'page[size]'
                    description: 'Menyesuaikan jumlah data yang ditampilkan.'
                    example: '2'
                    required: false
                    schema:
                        type: string
                        description: 'Menyesuaikan jumlah data yang ditampilkan.'
                        example: '2'
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 4, comment: 'Semangat Terus !!!', likes_count: 1, created_at: '2021-04-30T18:14:44.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }]
                                    links: { first: 'http://api.brn.com/api/articles/2/comments?page%5Bnumber%5D=1', last: null, prev: null, next: null }
                                    meta: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/2/comments', per_page: 15, to: 2 }
                                properties:
                                    data: { type: array, example: [{ id: 4, comment: 'Semangat Terus !!!', likes_count: 1, created_at: '2021-04-30T18:14:44.000000Z', user: { id: 1, name: 'Admin Arya Anggara', email: aryaanggara.dev@gmail.com, profile_photo_path: null, profile_photo_url: 'https://ui-avatars.com/api/?name=Admin+Arya+Anggara&color=7F9CF5&background=EBF4FF', created_at: '2021-04-30T16:05:56.000000Z' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://api.brn.com/api/articles/2/comments?page%5Bnumber%5D=1', last: null, prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'http://api.brn.com/api/articles/2/comments', per_page: 15, to: 2 } }
            tags:
                - Komentar
        post:
            summary: 'Menambahan Balasan Komentar.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n \"message\": \"Berhasil menambahkan komentar.\",\n}"
            tags:
                - Komentar
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                comment:
                                    type: string
                                    description: 'isi komentar.'
                                    example: 'Semangat terus :)'
                            required:
                                - comment
        parameters:
            -
                in: path
                name: comment
                description: 'valid id comment.'
                example: 1
                required: true
                schema:
                    type: integer
    '/api/comments/{comment}':
        delete:
            summary: 'Menghapus komentar.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n \"message\": \"Berhasil menghapus komentar.\",\n}"
            tags:
                - Komentar
        parameters:
            -
                in: path
                name: comment
                description: 'valid id comment.'
                example: 1
                required: true
                schema:
                    type: integer
    '/api/comments/{comment}/liked':
        post:
            summary: 'Menyukai komentar.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n \"message\": \"Berhasil menyukai komentar\",\n}"
            tags:
                - Komentar
        delete:
            summary: 'Batalkan menyukai komentar.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n \"message\": \"Berhasil membatalkan menyukai komentar\",\n}"
            tags:
                - Komentar
        parameters:
            -
                in: path
                name: comment
                description: 'valid id comment.'
                example: 1
                required: true
                schema:
                    type: integer
    /api/point/missions:
        get:
            summary: 'Mendapatkan list data misi.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, active: true, name: 'Daily Check In', description: 'Check In setiap hari', points: 10, parent_id: null, childrens: [] }, { id: 4, active: true, name: Grades, description: null, points: 100, parent_id: null, childrens: [{ id: 5, active: true, name: Excellent, description: null, points: 600, parent_id: 4, childrens: [{ id: 6, active: true, name: Excellent, description: null, points: 100, parent_id: 5, childrens: [] }] }] }]
                                    links: { first: 'https://api.brn.com/api/point/missions?page=1', last: null, prev: null, next: null }
                                    meta: { current_page: 1, from: 1, path: 'https://api.brn.com/api/point/missions', per_page: 10, to: 10 }
                                properties:
                                    data: { type: array, example: [{ id: 1, active: true, name: 'Daily Check In', description: 'Check In setiap hari', points: 10, parent_id: null, childrens: [] }, { id: 4, active: true, name: Grades, description: null, points: 100, parent_id: null, childrens: [{ id: 5, active: true, name: Excellent, description: null, points: 600, parent_id: 4, childrens: [{ id: 6, active: true, name: Excellent, description: null, points: 100, parent_id: 5, childrens: [] }] }] }], items: { type: object } }
                                    links: { type: object, example: { first: 'https://api.brn.com/api/point/missions?page=1', last: null, prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'https://api.brn.com/api/point/missions', per_page: 10, to: 10 } }
            tags:
                - Point
    /api/point/histories:
        get:
            summary: 'Mendapatkan list data histori point.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 2, active: true, name: 'Completed Lesson', description: null, points: 100, get_it_at: '2021-05-29T19:46:48.000000Z' }, { id: 1, active: true, name: 'Daily Check In', description: 'Check In setiap hari', points: 10, get_it_at: '2021-04-29T19:46:48.000000Z' }]
                                    links: { first: 'https://api.brn.com/api/point/missions?page=1', last: null, prev: null, next: null }
                                    meta: { current_page: 1, from: 1, path: 'https://api.brn.com/api/point/missions', per_page: 10, to: 10 }
                                properties:
                                    data: { type: array, example: [{ id: 2, active: true, name: 'Completed Lesson', description: null, points: 100, get_it_at: '2021-05-29T19:46:48.000000Z' }, { id: 1, active: true, name: 'Daily Check In', description: 'Check In setiap hari', points: 10, get_it_at: '2021-04-29T19:46:48.000000Z' }], items: { type: object } }
                                    links: { type: object, example: { first: 'https://api.brn.com/api/point/missions?page=1', last: null, prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, path: 'https://api.brn.com/api/point/missions', per_page: 10, to: 10 } }
            tags:
                - Point
    /api/ping:
        get:
            summary: 'Ping the server.'
            description: ''
            parameters:
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: ok
                                    timestamp: '2021-04-30T19:52:57.389567Z'
                                    host: 127.0.0.1
                                properties:
                                    status: { type: string, example: ok }
                                    timestamp: { type: string, example: '2021-04-30T19:52:57.389567Z' }
                                    host: { type: string, example: 127.0.0.1 }
            tags:
                - Server
            security: []
components:
    securitySchemes:
        default:
            type: http
            scheme: bearer
            description: ''
security:
    -
        default: []
